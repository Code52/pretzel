@using System
@using System.Collections.Generic
@using System.Linq
@using System.Text
@using Pretzel.Logic.Templating.Context
@using Page = Pretzel.Logic.Templating.Context.Page
@inherits RazorEngine.Templating.TemplateBase<PageContext>
@functions {

    static string WriteOutContents(IEnumerable<Page> pages, string path)
    {
		var indent = string.Empty.PadLeft(((path.Count(c=>c=='/') - 1) * 4));
        var sb = new StringBuilder();
        var allPagesUnderPath = pages
            .Where(p => p.Url.StartsWith(path))
            .ToArray();

        var pathPages = allPagesUnderPath
            .Where(p => !p.Url.Substring(path.Length + 1).Contains("/"))
            .ToArray();
        var pathDirectories = allPagesUnderPath
            .Except(pathPages)
			.Select(p => p.Url.Substring(path.Length).Split(new[] {"/"}, StringSplitOptions.RemoveEmptyEntries).FirstOrDefault())
            .Where(s => !string.IsNullOrEmpty(s))
            .Distinct();

		if (path != "/")
		{	
			sb.Append(indent);		
			sb.AppendLine(path.TrimEnd('/').Split('/').Last());
			sb.Append(indent);
			sb.AppendLine("<ul>");
		}
        foreach (var pathDirectory in pathDirectories)
        {
			var newPath = path.TrimEnd('/') + "/" + pathDirectory + "/";
            sb.Append(WriteOutContents(allPagesUnderPath, newPath));
        }

        foreach (var pathPage in pathPages)
        {
			sb.Append(indent);
			sb.Append("    ");
			if (path != "/")
				sb.Append("<li>");
            sb.Append(string.Format("<a href=\"{0}\">{1}</a>", pathPage.Url, pathPage.Title));
            sb.AppendLine(path != "/" ? "</li>" : "<br />");
        }

		if (path != "/")
		{
			sb.Append(indent);
			sb.AppendLine("</ul>");
		}
        return sb.ToString();
    }
}
@* ReSharper disable Html.PathError *@
<!DOCTYPE>
<html>
    <head>
        <meta content="en-au" http-equiv="Content-Language" />
        <meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
        <meta http-equiv="X-UA-Compatible" content="IE=9; IE=8; IE=7; IE=EDGE; chrome=1" />
        <link href="/rss.xml" type="application/rss+xml" rel="alternate" title="Blog Feed" />
        <link href="/atom.xml" type="application/atom+xml" rel="alternate" title="Blog Feed" />

        <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1" />
        <title>@Model.Title</title>
        <link rel="stylesheet" type="text/css" href="/css/style.css" />
        <link rel="shortcut icon" href="/img/favicon.ico" />
    </head>
    <body>
        <div id="side">
            <div id="hometext">Contents</div>
            <a href="/index.html">Home</a><br /><br />
            @Raw(WriteOutContents(Model.Site.Pages.Where(p => !(p is NonProcessedPage) && p.Title != "Wiki Home").OrderBy(p => p.Url), "/"))
        </div>
        <div id="container">
            <div id="content">
                <div class="entry-container">
                    <div class='entry'>
                        <h1>@Model.Title</h1>
                        <span class="postdate">@Model.Page.Date.ToString("d MMM, yyyy")
                            @foreach (var tag in Model.Page.Tags)
                            {
                                <li><a href="/tag/@tag">@tag</a></li>
                            }
                        </span>
                        @Raw(Model.Content)
                    </div>
                </div>
                <div id="page-navigation"> 
                    @if (Model.Previous != null && Model.Previous.Url != null)
                    {
                        <a href="@Model.Previous.Url" title="Previous Post: @Model.Previous.Title">&larr; @Model.Previous.Title</a>
                    }
                    @if (Model.Previous != null && Model.Previous.Url != null && Model.Next != null && Model.Next.Url != null)
                    {
                        <text>|</text>
                    }
                    @if (Model.Next != null && Model.Next.Url != null)
                    {
                        <a href="@Model.Next.Url" title="next Post: @Model.Next.Title">@Model.Next.Title &rarr; </a>
                    }
                    <div class="clear">&nbsp;</div>
                </div> 
              
            </div>
            <div id="disqus_thread"></div>
            <script type="text/javascript">
                /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
                var disqus_shortname = 'NAME'; // required: replace example with your forum shortname

                /* * * DON'T EDIT BELOW THIS LINE * * */
                (function () {
                    var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
                    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
                })();
            </script>
            <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
            <a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>

        </div>
    </body>
</html>
@* ReSharper restore Html.PathError *@
